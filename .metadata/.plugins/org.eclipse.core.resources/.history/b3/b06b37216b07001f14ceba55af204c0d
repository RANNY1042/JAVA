package model1.board;

import jakarta.servlet.ServletContext;
import model2.mvcboard.MVCBoardDTO;
import common.JDBConnect;

import java.util.List;
import java.util.Map;
import java.util.Vector;

public class BoardDAO extends JDBConnect{
	public BoardDAO(ServletContext application) {
		super(application);

	}


	public int selectCount(Map<String, Object> map) {
		int totalCount = 0;

		String query = "SELECT COUNT(*) FROM board ";
		if(map.get("searchWord")!=null) {
			query +="WHERE"+map.get("serachField")+" "
					+ "LIKE '%" + map.get("searchWord")+"%' " ;
		}
		try {
			stmt=con.createStatement();
			rs = stmt.executeQuery(query);
			rs.next();
			totalCount = rs.getInt(1);

		}
		catch(Exception e) {
			System.out.println("게시물 수를 구하는 중 예외 발생");
			e.printStackTrace();
		}
		return totalCount;
	}



	public List<BoardDTO> selectList(Map<String, Object> map){
		List<BoardDTO> bbs = new Vector<BoardDTO>();

		String query = "SELECT * FROM board ";
		if(map.get("searchWord")!=null) {
			query += "WHERE"+map.get("searchField")+" "
					+" LIKE '%"+map.get("searchWord")+ "%' ";
		}
		query +=" ORDER BY num DESC ";

		try {
			stmt = con.createStatement(); //쿼리문을 실행하기 위한 Statement객체 생성
			rs = stmt.executeQuery(query); //SELECT 쿼리문을 실행. 실행결과는 resultSet 객체로 반환

			while(rs.next()) {
				BoardDTO dto = new BoardDTO();

				dto.setNum(rs.getString("num"));
				dto.setTitle(rs.getString("title"));
				dto.setContent(rs.getString("content"));
				dto.setPostdate(rs.getDate("postdate"));
				dto.setId(rs.getString("id"));
				dto.setVisitcount(rs.getString("visitcount"));

				bbs.add(dto);
			}
		}


		catch (Exception e) {
			System.out.println("게시물 수를 구하는 중 예외 발생");
			e.printStackTrace();
		}

		return bbs;
	}
	
	public int insertWrite(BoardDTO dto) {
		int result=0;
		
		try {
			String query = "INSERT INTO board( "
					+ "title,content,id) "
					+ "VALUES ( "
					+ "?,?,?) ";
		psmt = con.prepareStatement(query);
		
		psmt.setString(1, dto.getTitle());
		psmt.setString(2, dto.getContent());
		psmt.setString(3, dto.getId());
		
		result = psmt.executeUpdate();
		}
		catch (Exception e) {
			System.out.println("게시물 입력 중 예외 발생");
			e.printStackTrace();
		}
		
		return result;
	}
	
	public BoardDTO selectView(String num) {
		BoardDTO dto = new BoardDTO();
		
		String query = "SELECT B.*, M.name "
				+"FROM member M INNER JOIN board B "
				+"ON M.id=B.id "
				+"WHERE num=?";
		try {
			psmt = con.prepareStatement(query);
			psmt.setString(1, num);
			rs = psmt.executeQuery();
			
		if(rs.next()) {
			dto.setNum(rs.getString(1));
			dto.setTitle(rs.getString(2));
			dto.setContent(rs.getString("content"));
			dto.setPostdate(rs.getDate("postdate"));
			dto.setId(rs.getString("id"));
			dto.setVisitcount(rs.getString(6));
			dto.setName(rs.getString("name"));
		}
		
	}
		catch(Exception e) {
			System.out.println("게시물 상세보기 중 예외 발생");
			e.printStackTrace();
		}
		
		return dto;
	}
	
	public void updateVisitCount(String num) {
		String query="UPDATE board SET "
				+"visitcount=visitcount+1 "
				+"WHERE num=?";
		
		try {
			psmt=con.prepareStatement(query);
			psmt.setString(1, num);
			psmt.executeUpdate();
		}
		catch(Exception e) {
			System.out.println("게시물 조회수 증가 중 예외 발생");
			e.printStackTrace();
		}
	}
	
	public int updateEdit(BoardDTO dto) {
		int result=0;
		
		try {
			String query= "UPDATE board SET "
						+" title=?, content=? "
						+" WHERE num=?";
			psmt=con.prepareStatement(query);
			psmt.setString(1, dto.getTitle());
			psmt.setString(2, dto.getContent());
			psmt.setString(3, dto.getNum());
			
			result=psmt.executeUpdate();
		}
		catch(Exception e) {
			System.out.println("게시물 수정 중 예외 발생");
			e.printStackTrace()
		}
		
	public int insertWrite(MVCBoardDTO dto) {
		int result=0;
		try { 
			String query = "Insert into mvcboard ( "
						 + " name, title, content, ofile, sfile, pass) "
						 + "VALUES ( "
						 + " ?,?,?,?,?,?)";
			psmt=con.prepareStatement(query);
			psmt.setString(1, dto.getName());
			psmt.setString(2, dto.getTitle());
			psmt.setString(3, dto.getContent());
			psmt.setString(4, dto.getOfile());
			psmt.setString(5, dto.getSfile());
			psmt.setString(6, dto.getPass());
			
			result=psmt.executeUpdate();
			
		}catch(Exception e) {
			System.out.println("게시물 입력 중 예외 발생");
			e.printStackTrace();
		}
		return result;
	}
}




